// CPP to find nim-game winner
#include <bits/stdc++.h>
using namespace std;

void merge(int *arr, int s, int e){
    int mid = s+(e-s)/2;
    
    int len1 = mid-s+1;
    int len2 = e-mid;
    
    int *first = new int[len1];
    int *second = new int[len2];
    
    int k=s;
    for (int i=0; i<len1; i++){
        first[i] = arr[k++];
    }
    
    k=mid+1;
    for(int i=0; i<len2; i++){
        second[i] = arr[k++];
    }
    
    int index1 = 0;
    int index2 = 0;
    k = s;
    while(index1<len1 && index2<len2){
        if(first[index1]<second[index2]){
            arr[k++] = first[index1++];
        }
        else{
            arr[k++] = second[index2++];
        }
    }
    while(index1<len1){
        arr[k++] = first[index1++];
    }
    while(index2<len2){
        arr[k++] = second[index2++];
    }
}

void printar(int arr[], int s, int e){
    
    for(int i=s; i<=e; i++){
        cout<<arr[i]<<" ";
    }cout<<endl;
}
void mergesort(int *arr, int s, int e){
    if(s>=e){
        return ;
    }
    
    int mid = s+(e-s)/2;

    mergesort(arr,s,mid);
    cout<<"hi";
        printar(arr,0,e);
    cout<<endl;
    mergesort(arr,mid+1,e);
        cout<<"hello";
        printar(arr,0,e);
cout<<endl;

    merge(arr,s,e);
    cout<<"hemz";
    printar(arr,0,e);
    cout<<endl;

}

int partition(int arr[], int s, int e){
    int pivot = arr[s];
    int cnt=0;
    
    for(int i=s+1; i<=e; i++){
        if(arr[i]<arr[s]){
            cnt++;
        }
    }
    
    int pivotindex = s+cnt;
    swap(arr[s],arr[pivotindex]);
    
    int i=s, j=e;
    while(i<pivotindex && j>pivotindex){
        while(arr[i]<pivot){
            i++;
        }
        while(arr[j]>pivot){
            j--;
        }
        
        if(i<pivotindex && j>pivotindex){
            swap(arr[i++],arr[j--]);
        }
    }
    
    return pivotindex;
}

void quicksort(int *arr, int s,int e){
    if(s>=e){
        return;
    }
    
    int p = partition(arr,s,e);
    quicksort(arr,s,p-1);
    quicksort(arr,p+1,e);
    
}  
int main()
{
int n;
cin>>n;
int a[100];
for(int i=0; i<n; i++){
    cin>>a[i];
}
quicksort(a,0,n-1);
for(int i=0; i<n; i++){
    cout<<a[i];
}

}
