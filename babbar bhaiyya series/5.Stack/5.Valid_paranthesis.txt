#include <bits/stdc++.h>
using namespace std;

void printstack(stack<int> s){
    if(s.empty()){
        return;
    }
    int x = s.top();
    s.pop();
    cout<<x<<endl;
    printstack(s);
    s.push(x);
}

bool detectparanthesis(string expression){
    stack<char>s;    
    for(int i=0; i<expression.length(); i++){
        char ch = expression[i];
        
        if(ch == '(' || ch == '{' || ch == '['){
            s.push(ch);
        }
        else{
            if(!s.empty()){
                char top = s.top();
                if((ch == ')' && top == '(')||
                (ch == '}' && top == '{') ||
                (ch == ']' && top == '[') ){
                    s.pop();
                }
            else{
                return false;
            }
        }
    }
}
    
    if(s.empty()){
        return true;
    }
    else{
        return false;
    }
}


int main()
{
/*stack<int> s;
s.push(2);
s.push(3);
s.push(4);
s.push(5);
s.push(6);
s.push(10);
printstack(s);
*/

string c;
getline(cin, c);
if(detectparanthesis(c)){
    cout<<"valid";
}
else{
    cout<<"not";
}
    
return 0;
}