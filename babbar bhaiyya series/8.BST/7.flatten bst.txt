/************************************************************

    Following is the Binary Tree node structure
    
    template <typename T>
    class TreeNode {
        public :
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~TreeNode() {
            if(left)
                delete left;
            if(right)
                delete right;
        }
    };

************************************************************/
void inorderval(TreeNode<int>* root, vector<int>&in){
    if(root==NULL){
        return;
    }
    inorderval(root->left, in);
    in.push_back(root->data);
    inorderval(root->right, in);
}

TreeNode<int>* flatten(TreeNode<int>* root)
{
    vector<int>in;
    inorderval(root, in);
    int n = in.size();
    
    TreeNode<int>* newroot = new TreeNode<int>(in[0]);
    TreeNode<int>* curr = newroot;
    
    for(int i=1; i<n; i++){
        TreeNode<int>*temp = new TreeNode<int>(in[i]);
        curr->left = NULL;
        curr->right = temp;
        curr = temp;
    }
    
    curr->left = NULL;
    curr->right = NULL;
    
    return newroot;
    
}
