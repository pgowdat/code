#include<bits/stdc++.h>
#include<queue>
using namespace std;

class Node{
public:
    int data;
    Node* left;
    Node* right;
    
    Node(int d){
        this->data = d;
        this->left=NULL;
        this->right = NULL;
    }
};

void levelOrderTraversal(Node* root) {
    queue<Node*> q;
    q.push(root);
    q.push(NULL);

    while(!q.empty()) {
        Node* temp = q.front();
        q.pop();

        if(temp == NULL) { 
            //purana level complete traverse ho chuka hai
            cout << endl;
            if(!q.empty()) { 
                //queue still has some child ndoes
                q.push(NULL);
            }  
        }
        else{
            cout << temp -> data << " ";
            if(temp ->left) {
                q.push(temp ->left);
            }

            if(temp ->right) {
                q.push(temp ->right);
            }
        }
    }

}

Node* insertintobst(Node* &root, int datas){
    if(root == NULL){
        root = new Node(datas);
        return root;
    }

    if(datas > root->data){
        root->right = insertintobst(root->right, datas);
    }
    else if(datas<root->data){
        root->left = insertintobst(root->left, datas);
    }
    //cout<<"john";
    
    return root;
}

void takeInput(Node* &root){
    int d;
    cin>>d;
    
    while(d!=-1){
        insertintobst(root,d);
        cin>>d;
    }
}

void preorder(Node* root){
    if(root==NULL){
        return;
    }
    
    cout<<root->data;
    preorder(root->left);
    preorder(root->right);
}


int main() {

Node* root = NULL;

cout<<"enter data "<<endl;
takeInput(root);

levelOrderTraversal(root);

cout<<endl;
preorder(root);
    
return 0;
}

