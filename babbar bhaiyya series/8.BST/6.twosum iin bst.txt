// Following is the Binary Tree node structure
/**************
class BinaryTreeNode {
    public : 
    T data;
    BinaryTreeNode<T> *left;
    BinaryTreeNode<T> *right;

    BinaryTreeNode(T data) {
        this -> data = data;
        left = NULL;
        right = NULL;
    }
    
};
***************/
void inorderval(BinaryTreeNode<int>* root, vector<int>&in){
    if(root==NULL){
        return;
    }
    inorderval(root->left, in);
    in.push_back(root->data);
    inorderval(root->right, in);
}


bool twoSumInBST(BinaryTreeNode<int>* root, int target) {
	vector<int>in;
    inorderval(root, in);
    int i=0;
    int j=in.size()-1;
    
    while(i<j){
        int sum = in[i]+in[j];
        if(sum==target)
            return true;
        
        if(sum>target){
            j--;
        }
        if(sum<target){
            i++;
        }
    }
    return false;
}