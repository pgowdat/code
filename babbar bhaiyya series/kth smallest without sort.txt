int findsum(vector<int>&arr, int k){
    int max = 0;
    int ans = 0;
    int sum = 0;
    for(int j=0; j<k; j++){
    max = 0;
        for(int i=0; i<arr.size(); i++){
            
            if(arr[i]>max){
                max = arr[i];
            //ans = i;
            }
        }
    
        for(int k=0; k<arr.size(); k++){
            if(arr[k]==max){
            arr[k] = 0;
            }
        }
    //sum+=max;
    }
    
    return max;
}

int findhighest(vector<int>arr){
    priority_queue<int>pq;
    for(int i=0; i<arr.size(); i++){
        pq.push(arr[i]);
    }
    int sum = 0;
    int count = 0;
    while(count<2){
        int a = pq.top();
        pq.pop();
        sum+=a;
        count++;
    }
    return sum;
}

int main()

{
    
   // node* node1 = new node(10);
   int n;
   cin>>n;
   vector<int>arr;
   for(int i=0; i<n; i++){
       int x;
       cin>>x;
       arr.push_back(x);
   }
   int k;
   cout<<"find which highest "<<endl;
   cin>>k;
   cout<<findsum(arr, k);
    
return 0;

}