// CPP to find nim-game winner
#include <bits/stdc++.h>
using namespace std;

void mergesortedarrays(int a1[], int n, int a2[], int m, int a3[]){
    int i=0, j=0, k=0;
    while(i<n && j<m){
        if(a1[i]<a2[j]){
            a3[k++]=a1[i++];
        }
        else{
            a3[k++]=a2[j++];
        }
    }
    while(i<n){
        a3[k++]=a1[i++];
    }
    while(j<m){
        a3[k++]=a2[j++];
    }
    for(int i=0; i<m+n; i++){
        cout<<a3[i];
    }
}

void mergeintofirst(int arr1[], int n, int arr2[], int m){
    int i=n-1;
    int j=m-1;
    int k = m+n-1;
    
    while(i>=0 && j>=0){
        if(arr1[i]>arr2[j]){
            arr1[k--] = arr1[i--];
        }
        else{
            arr1[k--] = arr2[j--];
        }
    }
    while(j>=0){
        arr1[k--] = arr2[j--];
    }
    
    for(int i=0; i<m+n; i++){
        cout<<arr1[i];
    }
}

void movezeroes(int arr[], int n){
    int i=0;
    for(int j=0; j<n; j++){
        if(arr[j]!=0){
            swap(arr[j],arr[i]);
            i++;
        }
    }
    for(int i=0; i<n;i++){
        cout<<arr[i];
    }
}

void cyclicrotate(vector<int>&arr, int k){
    vector<int>temp(arr.size());
    for(int i=0; i<arr.size(); i++){
        temp[(i+k)%arr.size()] = arr[i];
    }
    
    arr = temp;
    for(int i=0; i<arr.size(); i++){
        cout<<arr[i];
    }
}

void checkrot(int arr[], int n){
    int count =0;
    for(int i=0; i<n; i++){
        if(arr[i]>arr[i+1]){
            count++;
        }
    }
    if(arr[n-1]>arr[0]){
        count++;
    }
    if(count<=1){
        cout<<"sort";
    }
}

void dosum(vector<int>a, int n, vector<int>b, int m){
    int i=n-1;
    int j=m-1;
    int carry=0;
    vector<int>ans;
    while(i>=0 && j>=0){
        int val1 = a[i];
        int val2 = b[j];
        
        int sum = val1+val2+carry;
        carry = sum/10;
        sum = sum%10;
        ans.push_back(sum);
        i--;
        j--;
    }
    while(i>=0){
        int sum = a[i]+carry;
         carry = sum/10;
        sum = sum%10;
        ans.push_back(sum);
        i--;
    }
    while(j>=0){
        int sum = b[j]+carry;
        carry = sum/10;
        sum = sum%10;
        ans.push_back(sum);
        j--;
    }
    while(carry!=0){
        int sum=carry;
        carry = sum/10;
        sum = sum%10;
        ans.push_back(sum);
    }
    reverse(ans.begin(),ans.end());
    for(int i=0; i<ans.size(); i++){
        cout<<ans[i]<<" ";
    }
}
int main()
{
	int n;
    cin>>n;
    vector<int> a;
    for(int i=0; i<n; i++){
        int x;
        cin>>x;
        a.push_back(x);
    }
    int m;
    cin>>m;
    vector<int> b;
    for(int i=0; i<m; i++){
        int x;
        cin>>x;
        b.push_back(x);
    }
dosum(a,n,b,m);
}
